// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  invoices  Invoice[]
  clients   Client[]  @relation("UserClients") 
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int
  user      User     @relation(fields: [userId], references: [id], name: "UserClients") 
  invoices  Invoice[]
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  description String?
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  invoiceItems InvoiceItem[]
}

model Invoice {
  id          Int      @id @default(autoincrement())
  invoiceNumber String  @unique
  clientId    Int
  userId      Int
  totalAmount Float
  status      InvoiceStatus @default(PENDING)
  dueDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  client      Client   @relation(fields: [clientId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  invoiceItems InvoiceItem[]
}

model InvoiceItem {
  id          Int      @id @default(autoincrement())
  invoiceId   Int
  productId   Int
  quantity    Int
  unitPrice   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum InvoiceStatus {
  PENDING
  PAID
  CANCELED
}
